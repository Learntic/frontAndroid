// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.lerntic;

import com.apollographql.apollo.api.InputFieldMarshaller;
import com.apollographql.apollo.api.InputFieldWriter;
import com.apollographql.apollo.api.Operation;
import com.apollographql.apollo.api.OperationName;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.Response;
import com.apollographql.apollo.api.ResponseField;
import com.apollographql.apollo.api.ResponseFieldMapper;
import com.apollographql.apollo.api.ResponseFieldMarshaller;
import com.apollographql.apollo.api.ResponseReader;
import com.apollographql.apollo.api.ResponseWriter;
import com.apollographql.apollo.api.internal.SimpleOperationResponseParser;
import com.apollographql.apollo.api.internal.UnmodifiableMapBuilder;
import com.apollographql.apollo.api.internal.Utils;
import com.apollographql.apollo.internal.QueryDocumentMinifier;
import com.apollographql.apollo.response.ScalarTypeAdapters;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.Map;
import okio.BufferedSource;
import org.jetbrains.annotations.NotNull;

public final class FeedbacksQuery implements Query<FeedbacksQuery.Data, FeedbacksQuery.Data, FeedbacksQuery.Variables> {
  public static final String OPERATION_ID = "f03b77881b2696ccde20493e3b7ad10bbc2047f9f583d65f9feec99d9e43f5af";

  public static final String QUERY_DOCUMENT = QueryDocumentMinifier.minify(
    "query feedbacks($id: Int!) {\n"
        + "  feedbackById(id: $id) {\n"
        + "    __typename\n"
        + "    id\n"
        + "    id_usuario\n"
        + "    id_curso\n"
        + "    opinion\n"
        + "    nota\n"
        + "  }\n"
        + "}"
  );

  public static final OperationName OPERATION_NAME = new OperationName() {
    @Override
    public String name() {
      return "feedbacks";
    }
  };

  private final FeedbacksQuery.Variables variables;

  public FeedbacksQuery(int id) {
    variables = new FeedbacksQuery.Variables(id);
  }

  @Override
  public String operationId() {
    return OPERATION_ID;
  }

  @Override
  public String queryDocument() {
    return QUERY_DOCUMENT;
  }

  @Override
  public FeedbacksQuery.Data wrapData(FeedbacksQuery.Data data) {
    return data;
  }

  @Override
  public FeedbacksQuery.Variables variables() {
    return variables;
  }

  @Override
  public ResponseFieldMapper<FeedbacksQuery.Data> responseFieldMapper() {
    return new Data.Mapper();
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public OperationName name() {
    return OPERATION_NAME;
  }

  @Override
  @NotNull
  public Response<FeedbacksQuery.Data> parse(@NotNull final BufferedSource source,
      @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException {
    return SimpleOperationResponseParser.parse(source, this, scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<FeedbacksQuery.Data> parse(@NotNull final BufferedSource source) throws
      IOException {
    return parse(source, ScalarTypeAdapters.DEFAULT);
  }

  public static final class Builder {
    private int id;

    Builder() {
    }

    public Builder id(int id) {
      this.id = id;
      return this;
    }

    public FeedbacksQuery build() {
      return new FeedbacksQuery(id);
    }
  }

  public static final class Variables extends Operation.Variables {
    private final int id;

    private final transient Map<String, Object> valueMap = new LinkedHashMap<>();

    Variables(int id) {
      this.id = id;
      this.valueMap.put("id", id);
    }

    public int id() {
      return id;
    }

    @Override
    public Map<String, Object> valueMap() {
      return Collections.unmodifiableMap(valueMap);
    }

    @Override
    public InputFieldMarshaller marshaller() {
      return new InputFieldMarshaller() {
        @Override
        public void marshal(InputFieldWriter writer) throws IOException {
          writer.writeInt("id", id);
        }
      };
    }
  }

  public static class Data implements Operation.Data {
    static final ResponseField[] $responseFields = {
      ResponseField.forObject("feedbackById", "feedbackById", new UnmodifiableMapBuilder<String, Object>(1)
      .put("id", new UnmodifiableMapBuilder<String, Object>(2)
        .put("kind", "Variable")
        .put("variableName", "id")
        .build())
      .build(), false, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull FeedbackById feedbackById;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Data(@NotNull FeedbackById feedbackById) {
      this.feedbackById = Utils.checkNotNull(feedbackById, "feedbackById == null");
    }

    public @NotNull FeedbackById feedbackById() {
      return this.feedbackById;
    }

    @SuppressWarnings("unchecked")
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeObject($responseFields[0], feedbackById.marshaller());
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "feedbackById=" + feedbackById
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return this.feedbackById.equals(that.feedbackById);
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= feedbackById.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Data> {
      final FeedbackById.Mapper feedbackByIdFieldMapper = new FeedbackById.Mapper();

      @Override
      public Data map(ResponseReader reader) {
        final FeedbackById feedbackById = reader.readObject($responseFields[0], new ResponseReader.ObjectReader<FeedbackById>() {
          @Override
          public FeedbackById read(ResponseReader reader) {
            return feedbackByIdFieldMapper.map(reader);
          }
        });
        return new Data(feedbackById);
      }
    }
  }

  public static class FeedbackById {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forInt("id", "id", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("id_usuario", "id_usuario", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forInt("id_curso", "id_curso", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("opinion", "opinion", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forDouble("nota", "nota", null, false, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final int id;

    final @NotNull String id_usuario;

    final int id_curso;

    final @NotNull String opinion;

    final double nota;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public FeedbackById(@NotNull String __typename, int id, @NotNull String id_usuario,
        int id_curso, @NotNull String opinion, double nota) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.id = id;
      this.id_usuario = Utils.checkNotNull(id_usuario, "id_usuario == null");
      this.id_curso = id_curso;
      this.opinion = Utils.checkNotNull(opinion, "opinion == null");
      this.nota = nota;
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    public int id() {
      return this.id;
    }

    public @NotNull String id_usuario() {
      return this.id_usuario;
    }

    public int id_curso() {
      return this.id_curso;
    }

    public @NotNull String opinion() {
      return this.opinion;
    }

    public double nota() {
      return this.nota;
    }

    @SuppressWarnings("unchecked")
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeInt($responseFields[1], id);
          writer.writeString($responseFields[2], id_usuario);
          writer.writeInt($responseFields[3], id_curso);
          writer.writeString($responseFields[4], opinion);
          writer.writeDouble($responseFields[5], nota);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "FeedbackById{"
          + "__typename=" + __typename + ", "
          + "id=" + id + ", "
          + "id_usuario=" + id_usuario + ", "
          + "id_curso=" + id_curso + ", "
          + "opinion=" + opinion + ", "
          + "nota=" + nota
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof FeedbackById) {
        FeedbackById that = (FeedbackById) o;
        return this.__typename.equals(that.__typename)
         && this.id == that.id
         && this.id_usuario.equals(that.id_usuario)
         && this.id_curso == that.id_curso
         && this.opinion.equals(that.opinion)
         && Double.doubleToLongBits(this.nota) == Double.doubleToLongBits(that.nota);
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= id;
        h *= 1000003;
        h ^= id_usuario.hashCode();
        h *= 1000003;
        h ^= id_curso;
        h *= 1000003;
        h ^= opinion.hashCode();
        h *= 1000003;
        h ^= Double.valueOf(nota).hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<FeedbackById> {
      @Override
      public FeedbackById map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final int id = reader.readInt($responseFields[1]);
        final String id_usuario = reader.readString($responseFields[2]);
        final int id_curso = reader.readInt($responseFields[3]);
        final String opinion = reader.readString($responseFields[4]);
        final double nota = reader.readDouble($responseFields[5]);
        return new FeedbackById(__typename, id, id_usuario, id_curso, opinion, nota);
      }
    }
  }
}
