// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.lerntic;

import com.apollographql.apollo.api.InputFieldMarshaller;
import com.apollographql.apollo.api.InputFieldWriter;
import com.apollographql.apollo.api.Operation;
import com.apollographql.apollo.api.OperationName;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.Response;
import com.apollographql.apollo.api.ResponseField;
import com.apollographql.apollo.api.ResponseFieldMapper;
import com.apollographql.apollo.api.ResponseFieldMarshaller;
import com.apollographql.apollo.api.ResponseReader;
import com.apollographql.apollo.api.ResponseWriter;
import com.apollographql.apollo.api.internal.SimpleOperationResponseParser;
import com.apollographql.apollo.api.internal.UnmodifiableMapBuilder;
import com.apollographql.apollo.api.internal.Utils;
import com.apollographql.apollo.internal.QueryDocumentMinifier;
import com.apollographql.apollo.response.ScalarTypeAdapters;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import okio.BufferedSource;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class CoursesByUserIdQuery implements Query<CoursesByUserIdQuery.Data, CoursesByUserIdQuery.Data, CoursesByUserIdQuery.Variables> {
  public static final String OPERATION_ID = "2a0ea9bf47422fc3bec201c26fb5b108fb79744a6e3c763886eb54b5a877ae2b";

  public static final String QUERY_DOCUMENT = QueryDocumentMinifier.minify(
    "query coursesByUserId($id:String!) {\n"
        + "  coursesByUserId(id:$id) {\n"
        + "    __typename\n"
        + "    course_id\n"
        + "    course_description\n"
        + "    course_name\n"
        + "    course_score\n"
        + "  }\n"
        + "}"
  );

  public static final OperationName OPERATION_NAME = new OperationName() {
    @Override
    public String name() {
      return "coursesByUserId";
    }
  };

  private final CoursesByUserIdQuery.Variables variables;

  public CoursesByUserIdQuery(@NotNull String id) {
    Utils.checkNotNull(id, "id == null");
    variables = new CoursesByUserIdQuery.Variables(id);
  }

  @Override
  public String operationId() {
    return OPERATION_ID;
  }

  @Override
  public String queryDocument() {
    return QUERY_DOCUMENT;
  }

  @Override
  public CoursesByUserIdQuery.Data wrapData(CoursesByUserIdQuery.Data data) {
    return data;
  }

  @Override
  public CoursesByUserIdQuery.Variables variables() {
    return variables;
  }

  @Override
  public ResponseFieldMapper<CoursesByUserIdQuery.Data> responseFieldMapper() {
    return new Data.Mapper();
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public OperationName name() {
    return OPERATION_NAME;
  }

  @Override
  @NotNull
  public Response<CoursesByUserIdQuery.Data> parse(@NotNull final BufferedSource source,
      @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException {
    return SimpleOperationResponseParser.parse(source, this, scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<CoursesByUserIdQuery.Data> parse(@NotNull final BufferedSource source) throws
      IOException {
    return parse(source, ScalarTypeAdapters.DEFAULT);
  }

  public static final class Builder {
    private @NotNull String id;

    Builder() {
    }

    public Builder id(@NotNull String id) {
      this.id = id;
      return this;
    }

    public CoursesByUserIdQuery build() {
      Utils.checkNotNull(id, "id == null");
      return new CoursesByUserIdQuery(id);
    }
  }

  public static final class Variables extends Operation.Variables {
    private final @NotNull String id;

    private final transient Map<String, Object> valueMap = new LinkedHashMap<>();

    Variables(@NotNull String id) {
      this.id = id;
      this.valueMap.put("id", id);
    }

    public @NotNull String id() {
      return id;
    }

    @Override
    public Map<String, Object> valueMap() {
      return Collections.unmodifiableMap(valueMap);
    }

    @Override
    public InputFieldMarshaller marshaller() {
      return new InputFieldMarshaller() {
        @Override
        public void marshal(InputFieldWriter writer) throws IOException {
          writer.writeString("id", id);
        }
      };
    }
  }

  public static class Data implements Operation.Data {
    static final ResponseField[] $responseFields = {
      ResponseField.forList("coursesByUserId", "coursesByUserId", new UnmodifiableMapBuilder<String, Object>(1)
      .put("id", new UnmodifiableMapBuilder<String, Object>(2)
        .put("kind", "Variable")
        .put("variableName", "id")
        .build())
      .build(), true, Collections.<ResponseField.Condition>emptyList())
    };

    final @Nullable List<CoursesByUserId> coursesByUserId;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Data(@Nullable List<CoursesByUserId> coursesByUserId) {
      this.coursesByUserId = coursesByUserId;
    }

    public @Nullable List<CoursesByUserId> coursesByUserId() {
      return this.coursesByUserId;
    }

    @SuppressWarnings("unchecked")
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeList($responseFields[0], coursesByUserId, new ResponseWriter.ListWriter() {
            @Override
            public void write(List items, ResponseWriter.ListItemWriter listItemWriter) {
              for (Object item : items) {
                listItemWriter.writeObject(((CoursesByUserId) item).marshaller());
              }
            }
          });
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "coursesByUserId=" + coursesByUserId
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return ((this.coursesByUserId == null) ? (that.coursesByUserId == null) : this.coursesByUserId.equals(that.coursesByUserId));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= (coursesByUserId == null) ? 0 : coursesByUserId.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Data> {
      final CoursesByUserId.Mapper coursesByUserIdFieldMapper = new CoursesByUserId.Mapper();

      @Override
      public Data map(ResponseReader reader) {
        final List<CoursesByUserId> coursesByUserId = reader.readList($responseFields[0], new ResponseReader.ListReader<CoursesByUserId>() {
          @Override
          public CoursesByUserId read(ResponseReader.ListItemReader listItemReader) {
            return listItemReader.readObject(new ResponseReader.ObjectReader<CoursesByUserId>() {
              @Override
              public CoursesByUserId read(ResponseReader reader) {
                return coursesByUserIdFieldMapper.map(reader);
              }
            });
          }
        });
        return new Data(coursesByUserId);
      }
    }
  }

  public static class CoursesByUserId {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forInt("course_id", "course_id", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("course_description", "course_description", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("course_name", "course_name", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forDouble("course_score", "course_score", null, false, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final int course_id;

    final @NotNull String course_description;

    final @NotNull String course_name;

    final double course_score;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public CoursesByUserId(@NotNull String __typename, int course_id,
        @NotNull String course_description, @NotNull String course_name, double course_score) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.course_id = course_id;
      this.course_description = Utils.checkNotNull(course_description, "course_description == null");
      this.course_name = Utils.checkNotNull(course_name, "course_name == null");
      this.course_score = course_score;
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    public int course_id() {
      return this.course_id;
    }

    public @NotNull String course_description() {
      return this.course_description;
    }

    public @NotNull String course_name() {
      return this.course_name;
    }

    public double course_score() {
      return this.course_score;
    }

    @SuppressWarnings("unchecked")
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeInt($responseFields[1], course_id);
          writer.writeString($responseFields[2], course_description);
          writer.writeString($responseFields[3], course_name);
          writer.writeDouble($responseFields[4], course_score);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "CoursesByUserId{"
          + "__typename=" + __typename + ", "
          + "course_id=" + course_id + ", "
          + "course_description=" + course_description + ", "
          + "course_name=" + course_name + ", "
          + "course_score=" + course_score
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof CoursesByUserId) {
        CoursesByUserId that = (CoursesByUserId) o;
        return this.__typename.equals(that.__typename)
         && this.course_id == that.course_id
         && this.course_description.equals(that.course_description)
         && this.course_name.equals(that.course_name)
         && Double.doubleToLongBits(this.course_score) == Double.doubleToLongBits(that.course_score);
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= course_id;
        h *= 1000003;
        h ^= course_description.hashCode();
        h *= 1000003;
        h ^= course_name.hashCode();
        h *= 1000003;
        h ^= Double.valueOf(course_score).hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<CoursesByUserId> {
      @Override
      public CoursesByUserId map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final int course_id = reader.readInt($responseFields[1]);
        final String course_description = reader.readString($responseFields[2]);
        final String course_name = reader.readString($responseFields[3]);
        final double course_score = reader.readDouble($responseFields[4]);
        return new CoursesByUserId(__typename, course_id, course_description, course_name, course_score);
      }
    }
  }
}
